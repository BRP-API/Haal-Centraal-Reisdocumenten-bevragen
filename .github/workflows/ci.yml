name: ci

on:
  push:
    paths:
      - src/**
      - feature/**
      - .github/workflows/ci.yml
      - .docker/reisdocumenten-api.yml
    branches:
      - develop
      - master
    tags:
      - v*-proxy
      - v*-mock
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
            dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore Reisdocument.sln
      - name: Build
        run: dotnet build Reisdocument.sln --configuration Release --no-restore
      - name: Test
        run: dotnet test Reisdocument.sln --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm ci
      - name: Cache container images
        uses: actions/cache@v2.1.8
        with:
          path: /var/lib/docker/
          key: local-docker-directory
      - name: Build container images
        run: docker compose build
      - name: Login to P5 Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: haalcentraal.azurecr.io
          username: ${{ secrets.P5_CR_USER }}
          password: ${{ secrets.P5_CR_PWD }}
      - name: Start containers
        run: docker compose -f .docker/db-ci.yml -f .docker/reisdocumenten-api.yml -f .docker/reisdocumenten-proxy.yml up -d
      - name: Wait for DB restart
        run: sleep 5s
        shell: bash
      - name: Validate api functional specs
        run: |
          npx cucumber-js -f json:docs/features/test-result-zoeken-en-raadplegen-gba.json \
                          -f summary:docs/features/test-result-zoeken-en-raadplegen-gba-summary.txt \
                          features/raadpleeg-met-reisdocumentnummer \
                          features/zoek-met-burgerservicenummer \
                          --tags "not @skip-verify" --tags "@gba" \
                          --world-parameters '${{ secrets.TEST_SETTINGS }}'
      - name: Validate proxy functional specs
        if: always()
        run: |
          npx cucumber-js -f json:docs/features/test-result-zoeken-en-raadplegen.json \
                          -f summary:docs/features/test-result-zoeken-en-raadplegen-summary.txt \
                          features/raadpleeg-met-reisdocumentnummer \
                          features/zoek-met-burgerservicenummer \
                          --tags "not @skip-verify" --tags "not @gba" \
                          --world-parameters '${{ secrets.TEST_SETTINGS }}'
      - name: Stop containers
        if: always()
        run: docker compose -f .docker/db-ci.yml -f .docker/reisdocumenten-api.yml -f .docker/reisdocumenten-proxy.yml down
      - uses: actions-ecosystem/action-regex-match@v2
        if: always()
        id: regex-match
        with:
          text: ${{ github.ref_name }}
          regex: '^v(.*)-(.*)$'
      - name: Login to GitHub Container Registry
        if: always() && steps.regex-match.outputs.match != ''
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: push proxy container images
        if: always() && steps.regex-match.outputs.group2 == 'proxy'
        run: |
          docket tag ghcr.io/brp-api/haal-centraal-reisdocument-bevragen-proxy:latest ghcr.io/brp-api/haal-centraal-reisdocument-bevragen-proxy:${{ steps.regex-match.outputs.group1 }}
          docker push ghcr.io/brp-api/haal-centraal-reisdocument-bevragen-proxy:latest
          docker push ghcr.io/brp-api/haal-centraal-reisdocument-bevragen-proxy:${{ steps.regex-match.outputs.group1 }}
      - name: push mock container images
        if: always() && steps.regex-match.outputs.group2 == 'mock'
        run: |
          docker tag ghcr.io/brp-api/haal-centraal-reisdocument-bevragen-mock:latest ghcr.io/brp-api/haal-centraal-reisdocument-bevragen-mock:${{ steps.regex-match.outputs.group1 }}
          docker push ghcr.io/brp-api/haal-centraal-reisdocument-bevragen-mock:latest
          docker push ghcr.io/brp-api/haal-centraal-reisdocument-bevragen-mock:${{ steps.regex-match.outputs.group1 }}
